<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AACei+n/gW7C/3RitP9+bav/q52k/5yQjf+jl5z/9ur6/9i/2//p3e3/q6O//7Snx//Mwdj/mI6+/41+
        i//rua7//66n/7yJf/+Jfrf/ppvD/4Z4rP+lnbr/6+Ps//Pl///v4v7/+Oz7/8G04f+AbND/eWa2/31r
        uP94Z6n/gXKX/5yH7/+Tgdf/hnui/6qgq/+7tsn/wb/Z/8C+2v/Qxd7/1bzV/+DX6P+pnc//9Oj7//rt
        ///l2PP/n5XF/6ySnv/Fk5D/k4C//7ao5P/u4/L/zL/d/5CCx//a1N3/7uD3//rs///azdz/ysjM/8K8
        0f98bKP/dGKz/3tovf9wXK7/vrnL/8XF0v/Nzuj/ubjl/7y85f/q7P7/8vX//8zL5P/bzN7/1czn/7Ci
        2v/88vz/7uH8//Xo///05v//ua3V/5aTwv/IvOP/+ev7//Pl///88Pz/rp/a/7qy0//n3ub/3tDj/7+4
        xP/KytD/29zg/7Cmpf+ShZj/fm+c/29fmv/h4t3/3d7p/+vs//+7ut3/srHc/7694v/R0en/5ej7/+Dc
        5//Bt93/s6Pf//Pk9//w4v7/8uX///Dj+P/JxeX/v8Dr/7i20v/i1uf/9Of///fq///Vx+X/rKPS/9LD
        zv+9tsT/7fH8//P0///LzOn/trTf/7y62P+lnqn/kYiI/+7u8v/LzNr/w8Pc/6mozv+urdT/ubjh/7a2
        4/+2rc3/4uLn/62ny/+gjML/2cbc/9vL6P/y4/n/ycLd/7Kz3//Avuj/rq7b/7Gtwv/x4/f/6Nn1/+DP
        6v+XirD/tqe2/+fn+P/k5ff/zczo/7Sz3f+wr9b/uLfj/7e35f+7uL//9PX5/66xxP/Cwtj/s7Ld/7Oz
        3P+zsdn/wcLt/7Knzf/Qvs7/p6O9/56Fr//Lr8n/xKjF/8auyf+zsdf/vLzl/7y75f+8u+X/rKvS/76p
        wv/Kr8z/z7PP/5mAoP+xrbv/29jp/8LA3//Q0fD/urra/5STtf+dm7//rq/T/+3u8v/4+Pr/p6rD/8HD
        zf/m5vX/0tLw/62s0v+yst3/t7fi/8SowP9/b4v/p42y/8+vyv/Co7//pZzF/7S05f+6ueP/vLvl/728
        5f+4ueX/rJ7B/7mbtP/Kqsj/zLXO/9LS3//EtMn/5+j5/+jq+f/d3ev/xcXl/7S02v+jo8T/6uru//f3
        +f+qrcf/pae9//Pz9//p6/n/0NDr/8/N5f+7uNv/tarO/5Jugf+HfJL/lImi/4RvhP+NgKP/pqTd/6ak
        3P+mo9z/qabd/6qq4/+dkLv/noSY/6+Yqf+Sh5r/h3iI/7GdrP/v9P//3t/v/9na6//h4fr/xsbg/5uc
        u//w8PT/9vb5/62wyP+cn73/srPF/87I0v/O0uT/5uXx/7mYp//PzuP/r5eq/29hb/9LUV7/EQ8S/0g/
        S/+hntT/oqHR/6amzP+bmcf/oqHb/3Jsjf8qIif/wKup/56Cj/99V2z/087X/+jq8//h4fP/4eHw/+rs
        /f/Iydr/nZ+6//Dx9v/29vn/ra/H/52iwf+sprn/v6qx/62bq//p5/D/xbHD/7OOo//q6/L/T0hK/wAA
        AP8LCwr/X2Fi/8PC1f/e3+//5ub2/9bV6v+qqcT/KCk1/wAAAP/auLX/yJyh/6ibqf/V0dr/sp6t/+fs
        +v/MzuH/x8LN/6Wnvv+kp8P/7u70//b2+f+ur8j/mqC//7etvv/awcH/y6Or/9C5w//d3er/omuN/863
        yf+ora//UVBQ/8/Q0f/z9P//7/D//+rs///o6f7/6uv//+np+/+8u9P/RkZY/8qpp//rx8r/29/q/6OA
        kv/LwM//3dXi/5aKof/BrLL/pKG6/6SoxP/u7vP/9vb5/62wyP+cn77/r67B//LY0f/Gn6T/y6Ov/97g
        6P+7mrX/w5Gl/8vM0P/v8P7/7/H//+Tl/P/g4fL/5OT3/+Lj9f/m5/n/6On+/+/v///Y2fb/z7K0/9vV
        2P/Qv9L/rn+Y/9ne5//CpbT/yqau/+TGyf+gobv/pajE/+7u8//29vn/ra/I/56hv/+lp77/7MnG/9Or
        r//So7D/1sfR/9bP3P/NorT/zczV/9jZ6P/m5/z/6On8/9zc6//k5Pf/4ePz/9TV4f/Z2uj/6uv9/+Li
        8v+8q7P/29rh/86jsv+8obP/3d7n/7yUoP/sy8r/49nd/5qeuv+nqcT/7u7z//b2+f+sr8j/oKPA/52h
        vv/Vurz/57y8/9irt//Rr7r/3dnk/7uZsP/Kyev/1NP3/+Hh///l5vz/6ev//+np/f/p6v7/5eb3/9/g
        8f/k5f//0s7l/7u3wf/Vw87/1KGt/9LM1f/Yydb/zqGs/+zAv//AtcL/m6C//6eow//u7vT/9vb5/62v
        yP+go7//n6TC/7GrvP/mwL7/4rW+/82mtP+3m6T/u6i//8/O///PzPf/19f2/+bm///m5/v/39/1/+fn
        /P/p6v7/4+P//9PR/f/Oy/7/xbfP/8GcqP/Emaj/29vj/8+xv//drbb/z7C0/56hvP+ipcL/pafC/+7u
        9P/29vn/ra/I/5+iv/+kp8P/naG9/9O/wv/es7j/uJKg/7WLmf/c1eX/5Ofw/7Gq0//AuN7/3+Dq/+jp
        /f/m5/v/5ej7/+Pl9v/f3/X/ubLi/9PT6v/a0t7/0KSy/7aPnv+/r7n/uJak/9issv+po7f/oabE/6Kk
        wP+lp8P/7u70//b2+f+tr8j/n6K//6Smwv+eosD/u7PC/8ikpf/Hn6v/yqO1/7q3uv/FxM3/hHLN/5uK
        4/++utz/7vD9/+fo+v/Wytb/5+ny/7Sr4/+ci+b/ppzd/6ilq//OpLL/vJSj/7mRn/+yi5f/uZyq/5+j
        wP+kpsL/oaTA/6Wnw//u7vT/9vb5/62vyP+for//pajD/6Cmw/+clKf/0a2r/+G5vv/Qqbz/kY2b/5mS
        jv+Ecbr/VDyZ/6ynv//x9f//0LjF/9bI1v/x9v//lIiz/2pRt/9rWKb/dG5v/8eerP/RprT/0aiy/7mQ
        mv+ll6v/oqnG/6OlwP+hpMH/pafD/+7u9P/29vn/rK/I/6Cjv/+ipL//j4Kd/6OGlv/fvLj/6sXH/9mu
        u/+knsT/e3h9/2tgcv9EO1T/qqy3/97Q4v/DlqL/2dPl/9rc9f+WkZX/XlF7/1NMXf+tpab/37PA/9ar
        tP/etLn/zaSq/5yImv+anbn/pajE/6Cjv/+lp8P/7u70//b2+f+srsf/oaXD/5qZsP+RdI//t6Gw/+/O
        yP/uxsT/7L/B/6iYt/+ql67/rpGh/7a52P/LyuP/yaOy/8aYqP/Xzdz/4eT7/7e2zf+ShYn/xsnM/9fM
        3//dr7f/68HB/+3Fwf/rv8H/p4aZ/498lv+go73/pKfE/6Smwv/u7vT/9vb5/62vyP+dob7/ra3E/6eP
        p/+/r8D//PXx//fb2P/+0c7/uZae/8qfpv/Oqr3/sLTd/8a1yP/SpbH/yZyt/8+7yv/r8P//4d/v/86m
        sf/Y0eL/vqq9//LBwf/yy8f/7snE//DDw/+skaP/mXyX/4+Fn/+boLv/qKrE/+3t8//29vn/ra/I/5+i
        vv+nqcT/n4uk/7eds//99vb//vDt//3q4//ky8n/57/C/+O8vf+npND/17rA//fIxv/rvb//1LTB/9zg
        +v/m3+z/88TC/7ulsP/QsrX//9bR/+3Ixf/vysb/78/P/6OPoP+ZfpT/jHip/29ip/+WlbL/8/T3//b2
        +f+sr8f/oKTB/5+guv+ReZL/k3WP/9Wvtv/0zMb//dPP/+vOyv/x0s///uHb/66mxP/hyMj//9rU///W
        0P/nw8T/xMTp/+fZ5v/+1c3/2Ly5/+3Qy//929f/9NTP//HMyv/guL3/p4ue/413kf+DcbX/eWa6/3Zm
        qf/a2eD/9vb5/62vyP+fosD/o6W+/7+uwv+8qMD/uJSm/9OtsP/7z8r/8cjD//nMyP/+1dD/waqw/+jK
        yP//29X//9jS//zUzf+7tNj/1MTQ//3a0//z1ND//NbS//7Uz//2ysj/4bS8/8KYp/+Ye5D/iXKT/3Rj
        rv9+bLj/eGS1/4t+sv/29vn/rK/I/6CjwP+eob7/wr/U/+DS5P+khJ3/xpar/9estP/ovr//7sbD//3S
        zv/sxcD/+NDL//bJyP/nu7//8MTE/7mlvP/fwcL//9nR//jNyP/8z8r/9cjI/86krf/Jm6z/mXeG/4Fs
        fP+bgp//dGOs/3xquP98arf/d2Wz//b2+f+tr8j/oKPA/6CkwP+qqMT/uae//4p0jP+jepb/tIai/8SW
        rP/brrr/8cXH/+3Dwv/dsLf/xZ2t/8KYqf/Jmqz/wJmo/92yvP/esbj/27G3/+q8xf/Ln67/v560/8ao
        vv+Yf5D/e2iL/3Ffnf9yYK//e2m2/3lnsv99a7j/9vb5/62vyP+for//o6fD/5+fuP/Vw93/xrbP/7Sj
        uv/Xw93/zLXL/7N+o//Smrr/vo6i/7qZq//k1OX/4tHj/8usu/++kKX/roGb/7OTpv+xgqD/r3yd/5d7
        kv/k2+n/+/L+/9vM6P+PfNn/a1qr/11Mjv94Zrb/hHHG/3Zlq//29vn/ra/I/5+iv/+lqMP/m5+6/8/F
        2//u3Pj/08Pd/8Gyzv+kmL//p5Gq/4Vgf/+kiqP/7OD0//rt///47f//9ev8/866zv+olaj/5Nvs/9fF
        3f+pkan/hHKY/8Csyf/MuNL/n47l/6CL9v+kkPX/fWu+/11Nj/+LeNX/mITm//b2+f+usMn/oaTA/6Wo
        w/+ipcH/qqvD//Lr9P/88P//7Nz4/97P7P/azeP/xr3K/+vi8v/16Pz/18rl/7Smzf/t4PP/9uv8/+7k
        8//Cs9j/39Lr/9jL4v/Fsc3/w6PD/8OovP+pmOH/n4j5/5yH7/+lj/r/jHnU/4Rxyf+jjvn/9fb4/6eq
        xP+ZnLv/naC+/56gvv+YnLv/o6W6/9/c5P/17Pv/+u////Tm///y5fz/5tru/+PX6f/j1u3/4tTu/+ve
        8v/n2+//5tru/+nd8f/r3fP/59jy/+bX8f/j0O3/wafD/5mVsP+omt7/rZj2/5+L7/+hjPb/o433/5+K
        8P/5+fr/xcbX/7u90f++wNP/vb/S/77A0/+6vNH/ubrO/9LS2v/s6u3/7+P2//Pl///z5v//7uH3/+zg
        8//s4PL/6dzx/+nd8v/p3fH/7OD0//Tn///05///8+X//+re8f/DwdH/ur7R/7i6xf/HwdT/uaf1/6CK
        9P+eie7/moXt////////////////////////////////////////////+vr8//b19v/s6uv/5dzp//Dj
        +v/05///8+b///Ll/v/x5Pv/8OP6//Dj+v/x5P3/8uX///Ll/v/j2Of/5uTm//z9/f///////////+/w
        8f/Qx+r/taH5/6GM9P+5r+D/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>